{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dp-203-aug2022-df"
		},
		"asadatalakeduatlhp_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://asadatalakeduatlhp.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/asadatalakeduatlhp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('asadatalakeduatlhp_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Campaigns')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalakeduatlhp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "campaignanalytics.csv",
						"folderPath": "campaign-analytics",
						"fileSystem": "wwi-02"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asadatalakeduatlhp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CleanedCampaigns')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalakeduatlhp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "campoutput.csv",
						"fileSystem": "df-output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asadatalakeduatlhp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "Campaigns",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~>  Campaigns",
							"dataset": {
								"referenceName": "Campaigns",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared Campaigns = let AdfDoc = AzureStorage.DataLakeContents(\"https://asadatalakeduatlhp.dfs.core.windows.net/wwi-02/campaign-analytics/campaignanalytics.csv\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]) in Csv;\r\nshared UserQuery = let Source = #\"Campaigns\",\r\n  #\"Removed top rows\" = Table.Skip(Source, 1),\r\n  #\"Replaced value\" = Table.ReplaceValue(#\"Removed top rows\", \"\\\", \"\", Replacer.ReplaceText, {\"Column5\", \"Column7\"}),\r\n  #\"Merged columns\" = Table.CombineColumns(#\"Replaced value\", {\"Column5\", \"Column6\"}, Combiner.CombineTextByDelimiter(\"\", QuoteStyle.None), \"Revenue\"),\r\n  #\"Merged columns 1\" = Table.CombineColumns(#\"Merged columns\", {\"Column7\", \"Column8\"}, Combiner.CombineTextByDelimiter(\"\", QuoteStyle.None), \"TargetRevenue\"),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Merged columns 1\", {{\"Column1\", \"Region\"}, {\"Column2\", \"Country\"}, {\"Column3\", \"Category\"}, {\"Column4\", \"Campaign_Name\"}}) in #\"Renamed columns\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Campaigns')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline with PQ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Power Query1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "powerquery1",
								"type": "DataFlowReference",
								"datasetParameters": {
									"Campaigns": {},
									"UserQueryCleanedCampaigns": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQueryCleanedCampaigns",
											"dataset": {
												"referenceName": "CleanedCampaigns",
												"type": "DatasetReference",
												"parameters": {}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserQueryCleanedCampaigns"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/powerquery1')]",
				"[concat(variables('factoryId'), '/datasets/CleanedCampaigns')]"
			]
		}
	]
}